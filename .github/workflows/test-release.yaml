name: Test GHA Release

on:
  push:
    tags:
      - "v0.*"

jobs:
  wait-for-release:
    name: Wait for Release to complete
    runs-on: ubuntu-latest
    steps:
      - name: Wait for release
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-name: "Release GHA"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 5

  test-default:
    name: Test simple install
    runs-on: ubuntu-latest
    needs: wait-for-release
    steps:
      - uses: releasetools/bash@v0
      - name: Run tests
        shell: bash
        run: |
          rt base::version
          rt base::check_deps

  test-explicit-version:
    name: Test install current tag
    runs-on: ubuntu-latest
    needs: wait-for-release
    steps:
      - name: Extract release version
        shell: bash
        run: |
          GITHUB_REF='${{ github.ref }}'
          if [[ "$GITHUB_REF" =~ refs/tags/(v[0-9]+\..*) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Found release version: $VERSION" >&2
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No matching version found" >&2
            exit 1
          fi
      - uses: releasetools/bash@v0
        with:
          version: ${{ env.VERSION }}
      - name: Run Tests
        shell: bash
        run: |
          rt base::version
          rt base::check_deps

  test-customizations:
    name: Test customizations
    runs-on: ubuntu-latest
    needs: wait-for-release
    steps:
      - uses: releasetools/bash@v0
        env:
          RELEASETOOLS_INSTALL_DIR: /opt/hostedtoolcache/releasetools
          RELEASETOOLS_BINARY_DIR: ${{ runner.temp }}/bin

      - name: Ensure the release tools are installed and working
        shell: bash
        run: |
          ${{ runner.temp }}/bin/rt base::version
          ${{ runner.temp }}/bin/rt base::check_deps

  test-manual-install:
    name: Test manual install
    runs-on: ubuntu-latest
    needs: wait-for-release
    steps:
      - name: Extract release version
        shell: bash
        run: |
          GITHUB_REF='${{ github.ref }}'
          if [[ "$GITHUB_REF" =~ refs/tags/(v[0-9]+\..*) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Found release version: $VERSION" >&2
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No matching version found" >&2
            exit 1
          fi
      - name: Ensure the release tools are installed and working
        shell: bash
        env:
          RELEASETOOLS_INSTALL_DIR: /opt/hostedtoolcache/releasetools
          RELEASETOOLS_BINARY_DIR: ${{ runner.temp }}/bin
        run: |
          bash <(curl -sSL "https://github.com/releasetools/bash/releases/download/${{ env.VERSION }}/install.sh")

      - name: Ensure the release tools are installed and working
        shell: bash
        run: |
          ${{ runner.temp }}/bin/rt base::version
          ${{ runner.temp }}/bin/rt base::check_deps
